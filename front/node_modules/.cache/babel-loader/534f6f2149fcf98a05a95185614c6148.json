{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johnnie\\\\Desktop\\\\couponproject\\\\couponproject\\\\src\\\\App\\\\Components\\\\Login\\\\Login.js\";\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\nimport './login.css';\nimport history from '../history';\nimport * as Yup from \"yup\";\nimport AutenticationService from './../../../service/AutenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email format').required('Required'),\n  password: Yup.string().required('Required')\n});\nexport default function Login() {\n  const handleSubmit = (values, {\n    setFieldValue\n  }) => {\n    AutenticationService.login(values.email, values.password, values.type).then(() => {\n      switch (values.type) {\n        case \"ADMIN\":\n          history.push('/admin');\n          break;\n\n        case \"COMPANY\":\n          history.push('/company');\n          break;\n\n        case \"CUSTOMER\":\n          history.push('/customer');\n          break;\n\n        default:\n          break;\n      }\n    }, error => {\n      if (error.response) {\n        alert(error.response.data.string);\n        console.log(error.response);\n      } else alert(\"Server is down\");\n\n      setFieldValue('password', \"\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formik\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\",\n        type: \"ADMIN\"\n      },\n      onSubmit: (values, {\n        setFieldValue\n      }) => handleSubmit(values, {\n        setFieldValue\n      }),\n      validationSchema: validationSchema,\n      children: ({\n        isValid,\n        dirty,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"control-label col-sm-2\",\n            children: \" Enter your Email \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            class: \"col-sm-2\",\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter your Email\",\n            title: values.email,\n            required: true,\n            autocomplete: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          component: \"div\",\n          name: \"email\",\n          className: \"alert alert-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 103\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"control-label col-sm-2\",\n            children: \" Enter your Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            class: \"col-sm-2\",\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter your Password\",\n            required: true,\n            autocomplete: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          component: \"div\",\n          name: \"password\",\n          className: \"alert alert-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 106\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"control-label col-sm-2\",\n            children: \" Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            class: \"col-sm-2\",\n            component: \"select\",\n            name: \"type\",\n            placeholder: \"Enter your type\",\n            title: values.type,\n            required: true,\n            autocomplete: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ADMIN\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"COMPANY\",\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CUSTOMER\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-primary my-1\",\n          disabled: !(isValid && dirty),\n          title: \"Login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Johnnie/Desktop/couponproject/couponproject/src/App/Components/Login/Login.js"],"names":["Field","Formik","Form","ErrorMessage","history","Yup","AutenticationService","validationSchema","object","email","string","required","password","Login","handleSubmit","values","setFieldValue","login","type","then","push","error","response","alert","data","console","log","isValid","dirty"],"mappings":"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","sourcesContent":["import { Field, Formik, Form, ErrorMessage } from 'formik'\r\nimport './login.css'\r\nimport history from '../history';\r\nimport * as Yup from \"yup\";\r\nimport AutenticationService from './../../../service/AutenticationService'\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required'),\r\n    password: Yup.string().required('Required')\r\n})\r\nexport default function Login() {\r\n    const handleSubmit = (values, { setFieldValue }) => {\r\n\r\n        AutenticationService\r\n            .login(\r\n                values.email,\r\n                values.password,\r\n                values.type\r\n            )\r\n            .then(() => {\r\n                switch (values.type) {\r\n                    case \"ADMIN\":\r\n                        history.push('/admin')\r\n                        break;\r\n                    case \"COMPANY\":\r\n                        history.push('/company')\r\n                        break;\r\n                    case \"CUSTOMER\":\r\n                        history.push('/customer')\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            },\r\n                error => {\r\n                    if (error.response) {\r\n                        alert(error.response.data.string)\r\n                        console.log(error.response)\r\n                    }\r\n\r\n                    else\r\n                        alert(\"Server is down\")\r\n                    setFieldValue('password', \"\")\r\n                }\r\n            )\r\n    }\r\n    return (\r\n\r\n        <div className=\"formik\">\r\n            <h2>Login:</h2><br />\r\n\r\n            <Formik\r\n\r\n                initialValues={{ email: \"\", password: \"\", type: \"ADMIN\" }}\r\n                onSubmit={(values, { setFieldValue }) => handleSubmit(values, { setFieldValue })}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({ isValid, dirty, values }) => (\r\n                    <Form >\r\n                        <div class=\"form-group\">\r\n\r\n                            <label class=\"control-label col-sm-2\" > Enter your Email </label>\r\n                            <Field class=\"col-sm-2\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Enter your Email\"\r\n                                title={values.email}\r\n                                required={true}\r\n                                autocomplete={true}\r\n                            />\r\n\r\n                        </div>\r\n                        <ErrorMessage component='div' name='email' className='alert alert-primary' /> <br />\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label col-sm-2\"> Enter your Password </label>\r\n                            <Field class=\"col-sm-2\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Enter your Password\"\r\n                                required={true}\r\n                                autocomplete={true}\r\n                            />\r\n                        </div>\r\n                        <ErrorMessage component='div' name='password' className='alert alert-primary' /> <br />\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label col-sm-2\"> Type </label>\r\n                            <Field class=\"col-sm-2\"\r\n                                component=\"select\"\r\n                                name=\"type\"\r\n                                placeholder=\"Enter your type\"\r\n                                title={values.type}\r\n                                required={true}\r\n                                autocomplete={true}>\r\n                                <option value=\"ADMIN\">Admin</option>\r\n                                <option value=\"COMPANY\">Company</option>\r\n                                <option value=\"CUSTOMER\">Customer</option>\r\n                            </Field>\r\n                        </div ><br />\r\n                        <button type=\"submit\" class=\"btn btn-primary my-1\" disabled={!(isValid && dirty)} title=\"Login\">\r\n                            Login\r\n                        </button>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik >\r\n\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}